/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './app/__root'
import { Route as MainImport } from './app/_main'
import { Route as AuthImport } from './app/_auth'
import { Route as IndexImport } from './app/index'

// Create Virtual Routes

const MainDashboardLazyImport = createFileRoute('/_main/dashboard')()
const AuthSigninLazyImport = createFileRoute('/_auth/signin')()

// Create/Update Routes

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MainDashboardLazyRoute = MainDashboardLazyImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => MainRoute,
} as any).lazy(() => import('./app/_main/dashboard.lazy').then((d) => d.Route))

const AuthSigninLazyRoute = AuthSigninLazyImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./app/_auth/signin.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninLazyImport
      parentRoute: typeof AuthImport
    }
    '/_main/dashboard': {
      id: '/_main/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof MainDashboardLazyImport
      parentRoute: typeof MainImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthSigninLazyRoute: typeof AuthSigninLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSigninLazyRoute: AuthSigninLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface MainRouteChildren {
  MainDashboardLazyRoute: typeof MainDashboardLazyRoute
}

const MainRouteChildren: MainRouteChildren = {
  MainDashboardLazyRoute: MainDashboardLazyRoute,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof MainRouteWithChildren
  '/signin': typeof AuthSigninLazyRoute
  '/dashboard': typeof MainDashboardLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof MainRouteWithChildren
  '/signin': typeof AuthSigninLazyRoute
  '/dashboard': typeof MainDashboardLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_main': typeof MainRouteWithChildren
  '/_auth/signin': typeof AuthSigninLazyRoute
  '/_main/dashboard': typeof MainDashboardLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/signin' | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/signin' | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_main'
    | '/_auth/signin'
    | '/_main/dashboard'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  MainRoute: typeof MainRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  MainRoute: MainRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_main"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/signin"
      ]
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/dashboard"
      ]
    },
    "/_auth/signin": {
      "filePath": "_auth/signin.lazy.tsx",
      "parent": "/_auth"
    },
    "/_main/dashboard": {
      "filePath": "_main/dashboard.lazy.tsx",
      "parent": "/_main"
    }
  }
}
ROUTE_MANIFEST_END */
